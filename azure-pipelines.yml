trigger:
  branches:
    include:
      - master

jobs:
  - job: Test_Windows
    strategy:
      matrix:
        x86:
          target: i686-pc-windows-msvc
        x64:
          target: x86_64-pc-windows-msvc
        x64-gnu:
          target: x86_64-pc-windows-gnu
    pool:
      vmImage: windows-latest

    steps:
      - script: |
          rustup toolchain install nightly
          rustup +nightly target install $(target)
          cargo +nightly test --workspace --features=all,nightly --target $(target) -Z doctest-xcompile
        displayName: TestNightly
      # - script: |
      #     cargo test --workspace --features all --target $(target)
      #   displayName: TestStable

  - job: Test_Ubuntu
    strategy:
      matrix:
        focal:
          image: ubuntu-20.04
        jammy:
          image: ubuntu-22.04
    pool:
      vmImage: $(image)

    steps:
      - script: |
          rustup toolchain install nightly
          cargo +nightly test --workspace --features all,nightly
        displayName: TestNightly
      # - script: |
      #     cargo test --workspace --features all
      #   displayName: TestStable

      - script: |
          rustup toolchain install nightly
          cargo +nightly test --workspace --features all,polling,native-tls,nightly --no-default-features
        displayName: TestNightly-polling
      # - script: |
      #     cargo test --workspace --features all,polling --no-default-features
      #   displayName: TestStable-polling

  - job: Test_Mac
    strategy:
      matrix:
        ventura:
          image: macOS-13
        monterey:
          image: macOS-12
    pool:
      vmImage: $(image)

    steps:
      - script: |
          rustup toolchain install nightly
          cargo +nightly test --workspace --features all,nightly
        displayName: TestNightly
      # - script: |
      #     cargo test --workspace --features all
      #   displayName: TestStable

  - job: Clippy_Doc
    strategy:
      matrix:
        windows:
          image: windows-latest
        linux:
          image: ubuntu-latest
        macos:
          image: macOS-latest
    pool:
      vmImage: $(image)

    steps:
      - script: |
          rustup toolchain install nightly
          cargo +nightly doc --workspace --all-features --no-deps
        displayName: Build docs

      - script: |
          rustup +nightly component add clippy
          cargo +nightly clippy --all-features --all-targets -- -Dwarnings
        displayName: Run clippy
